<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sorted on Pin Code Blog</title><link>https://zalman0813.github.io/tags/sorted/</link><description>Recent content in sorted on Pin Code Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 24 Nov 2022 19:39:00 +0800</lastBuildDate><atom:link href="https://zalman0813.github.io/tags/sorted/index.xml" rel="self" type="application/rss+xml"/><item><title>169. Majority Element</title><link>https://zalman0813.github.io/posts/majority-element/</link><pubDate>Thu, 24 Nov 2022 19:39:00 +0800</pubDate><guid>https://zalman0813.github.io/posts/majority-element/</guid><description>Link: https://leetcode.com/problems/majority-element/
Status: done
Solution: sorted, counting
Code:
sorted # Time Complexity: O(nlogn) # Space Complexity: O(1) class Solution: def majorityElement(self, nums: List[int]) -&amp;gt; int: nums.sort(reverse=True) # majority element that appears more than ⌊n / 2⌋ times, so mid will be the majority element. mid = len(nums) // 2 return nums[mid] counting # Time Complexity: O(n) # Space Complexity: O(1) class Solution: def majorityElement(self, nums: List[int]) -&amp;gt; int: res, counts = 0, 0 for n in nums: # When counts == 0, we initate res.</description></item></channel></rss>