<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>math on Pin Code Blog</title><link>https://zalman0813.github.io/tags/math/</link><description>Recent content in math on Pin Code Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 25 Nov 2022 17:43:17 +0800</lastBuildDate><atom:link href="https://zalman0813.github.io/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>67. Add Binary</title><link>https://zalman0813.github.io/posts/add-binary/</link><pubDate>Fri, 25 Nov 2022 17:43:17 +0800</pubDate><guid>https://zalman0813.github.io/posts/add-binary/</guid><description>Link: https://leetcode.com/problems/add-binary/
Code:
# Time Complexity: O(n) or n(m), n - a.length, m - b.length # Space Complexity: O(n+m) class Solution: def addBinary(self, a: str, b: str) -&amp;gt; str: res = &amp;#39;&amp;#39; carry = 0 a = list(a) b = list(b) while a or b or carry: if a: carry += int(a.pop()) if b: carry += int(b.pop()) res += str(carry % 2) carry = carry // 2 return res[::-1]</description></item></channel></rss>