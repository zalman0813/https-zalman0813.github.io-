<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dfs on Pin Code Blog</title><link>https://zalman0813.github.io/tags/dfs/</link><description>Recent content in dfs on Pin Code Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Nov 2022 22:48:58 +0800</lastBuildDate><atom:link href="https://zalman0813.github.io/tags/dfs/index.xml" rel="self" type="application/rss+xml"/><item><title>Invert Binary Tree</title><link>https://zalman0813.github.io/posts/invert-binary-tree/</link><pubDate>Mon, 07 Nov 2022 22:48:58 +0800</pubDate><guid>https://zalman0813.github.io/posts/invert-binary-tree/</guid><description>Link: https://leetcode.com/problems/invert-binary-tree/
Solution: dfs
Code:
class Solution: def invertTree(self, root: Optional[TreeNode]) -&amp;gt; Optional[TreeNode]: if not root: return None root.left, root.right = root.right, root.left self.invertTree(root.left) self.invertTree(root.right) return root Time Complexity: O(n)
Space Complexity: O(n)</description></item></channel></rss>