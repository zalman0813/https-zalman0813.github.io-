<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>two pointer on Pin Code Blog</title><link>https://zalman0813.github.io/tags/two-pointer/</link><description>Recent content in two pointer on Pin Code Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 09 Nov 2022 21:19:27 +0800</lastBuildDate><atom:link href="https://zalman0813.github.io/tags/two-pointer/index.xml" rel="self" type="application/rss+xml"/><item><title>704. Binary Search</title><link>https://zalman0813.github.io/posts/binary-search/</link><pubDate>Wed, 09 Nov 2022 21:19:27 +0800</pubDate><guid>https://zalman0813.github.io/posts/binary-search/</guid><description>Solution: two pointer
Code:
class Solution: class Solution: def search(self, nums: List[int], target: int) -&amp;gt; int: if len(nums) == 1: return 0 if nums[0] == target else -1 l = 0 r = len(nums) - 1 while l &amp;lt;= r: mid = (l + r) // 2 if nums[mid] &amp;gt; target: r = mid -1 elif nums[mid] &amp;lt; target: l = mid + 1 else: return mid return -1 Time Complexity: O(logn) Space Complexity: O(1)</description></item><item><title>Best Time to Buy and Sell Stock</title><link>https://zalman0813.github.io/posts/best-time-to-buy-and-sell-stock/</link><pubDate>Thu, 03 Nov 2022 18:48:37 +0800</pubDate><guid>https://zalman0813.github.io/posts/best-time-to-buy-and-sell-stock/</guid><description>Solution: two pointer
Code:
class Solution: def maxProfit(self, prices: List[int]) -&amp;gt; int: maxP = 0 l, r = 0, 1 while r &amp;lt; len(prices): profit = prices[r] - prices[l] if profit &amp;gt; 0: maxP = max(profit, maxP) else: l = r r += 1 return maxP Time Complexity: O(n)
Space Complexity: O(1)</description></item><item><title>Merge Two Sorted Lists</title><link>https://zalman0813.github.io/posts/merge-two-sorted-lists/</link><pubDate>Wed, 02 Nov 2022 22:05:02 +0800</pubDate><guid>https://zalman0813.github.io/posts/merge-two-sorted-lists/</guid><description>Link: https://leetcode.com/problems/merge-two-sorted-lists/
Status: done
Solution: two pointer
Code:
class Solution: def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -&amp;gt; Optional[ListNode]: dummy = ListNode() tail = dummy while list1 and list2: if list1.val &amp;gt; list2.val: tail.next = list2 list2 = list2.next else: tail.next = list1 list1 = list1.next tail = tail.next if list1: tail.next = list1 if list2: tail.next = list2 return dummy.next Time Complexity: O(n)
Space Complexity: O(1)</description></item><item><title>1.two Sum</title><link>https://zalman0813.github.io/posts/two-sum/</link><pubDate>Mon, 31 Oct 2022 22:01:45 +0800</pubDate><guid>https://zalman0813.github.io/posts/two-sum/</guid><description>Solution: HashMap, Two Pointer
Note:
hashmap: dictionay to store key as num, value as index. tow pointer: sorted and find original index. Need to consider the same value Code:
hashmap class Solution: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: hashMap = {} for i, num in enumerate(nums): rest = target - num if rest in hashMap: return [i, hashMap[rest] ] hashMap[num] = i Time Complexity: O(n) Space Complexity: O(n)</description></item></channel></rss>