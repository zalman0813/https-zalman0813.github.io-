<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cyclic sort on Pin Code Blog</title><link>https://zalman0813.github.io/tags/cyclic-sort/</link><description>Recent content in cyclic sort on Pin Code Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 07 Jan 2023 21:57:48 +0800</lastBuildDate><atom:link href="https://zalman0813.github.io/tags/cyclic-sort/index.xml" rel="self" type="application/rss+xml"/><item><title>42. First Missing Positive</title><link>https://zalman0813.github.io/posts/first-missing-positive/</link><pubDate>Sat, 07 Jan 2023 21:57:48 +0800</pubDate><guid>https://zalman0813.github.io/posts/first-missing-positive/</guid><description>Link: https://leetcode.com/problems/first-missing-positive
Solution: cyclic sort
Code:
# Time Complexity: O(n) # Space Complexity: O(1) class Solution: def firstMissingPositive(self, nums: List[int]) -&amp;gt; int: i = 0 n = len(nums) while i &amp;lt; n: j = nums[i] - 1 if nums[i] &amp;gt; 0 and nums[i] &amp;lt;= n and nums[i] != nums[j]: nums[i], nums[j] = nums[j], nums[i] else: i += 1 for i in range(n): if nums[i] != i + 1: return i + 1 # if missing number is over n, it&amp;#39;s as n + 1 return n + 1</description></item></channel></rss>